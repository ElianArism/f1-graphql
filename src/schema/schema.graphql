type Query {
  seasonsList: [Season!]!
  racesByYear(year: String!): [Race!]!
  racesByYearAndRound(year: String!, round: Int!): Race
  historyDrivers(page: Int, elementsPerPage: Int): [Driver!]!
  historyDriversByYear(year: String!): [Driver!]!
  historyDriversByYearAndRound(year: String!, round: Int!): [Driver!]!
  driverById(id: String!): Driver
  getStandingsByYear(year: String!): [StandingsList!]!
  circuits(page: Int, elementsperPage: Int): [Circuit!]!
  circuitById(id: String!) Circuit
}

type Mutation {
  add(value: String!): [String]
}

type Race {
  season: String!
  round: String!
  url: String!
  urlMobile: String!
  name: String!
  circuit: Circuit!
  date: String!
  time: String
}

type Circuit {
  id: String!
  urlMobile: String!
  url: String!
  name: String!
  location: Location!
}

type Location {
  lat: String!
  lng: String!
  locality: String!
  country: String!
}

type Season {
  urlMobile: String!
  year: String! 
  url: String!
}

type StandingsTable {
  season: String!
  round: String!
  StandingsLists: [StandingsList!]!
}

type StandingsList {
  season: String!
  round: String!
  DriverStandings: [DriverStanding!]!
}

type DriverStanding {
  position: String!
  positionText: String!
  points: String!
  wins: String!
  Driver: Driver!
  Constructors: [Constructor!]!
}

type Constructor {
  id: String!
  url: String!
  name: String!
  nationality: String!
}

type Driver {
  id: String!
  url: String!
  name: String!
  dateOfBirth: String!
  nationality: String!
  code: String
  urlMobile: String!
  permanentNumber: String
}

